@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "GetReviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/Content/layout/promotionCards.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<style type="text/css">
    .tags span {
        margin-right: 1px;
        border: 1px solid #22abc9;
        padding-right: 9px;
        padding-left: 9px;
        padding-top: 1px;
        padding-bottom: 2px;
        border-radius: 15px;
        background-color: #22abc9;
        color: #fff
    }
</style>

<div style="padding-top:10px">

    <script type="text/javascript">

        function items(item) {
            var item_names = []
            for (var i = 0; i < item.length; i++) {
                console.log(item[i].Name);
                item_names.push(item[i].Name);
            }


            var taghtml = []
            for (var i = 0; i < item_names.length; i++) {
                console.log(item_names[i]);
                taghtml.push(`<a href="#">${item_names[i]}</a>`);
            }

            var names = taghtml.slice(0, -1).join(' , ') + ' and ' + taghtml.slice(-1);
            console.log(names);
            return names;
        }

        function tags(tag) {
            var tag_names = []
            for (var i = 0; i < tag.length; i++) {
                // console.log(tag[i].Name);
                tag_names.push(tag[i].Name);
            }
            var taghtml = []
            for (var i = 0; i < tag_names.length; i++) {
                console.log(tag_names[i]);
                taghtml.push(` <span>  ${tag_names[i]}  </span>`);
            }
            var tags = taghtml.slice(0, -1).join(' &nbsp; ') + ' &nbsp; ' + taghtml.slice(-1);
            return tags;
            //var names = tag_names.slice(0, -1).join(',') + ' and ' + tag_names.slice(-1);
        }

        function totalLikes(likes) {
            var total_likes = 0;
            if (likes == null) {
                return total_likes;
            }
            if (likes.length > 0) {
                for (var i = 0; i < likes.length; i++) {
                    if (likes[i].IsLiked == 1) {
                        total_likes = total_likes + 1;
                    }
                }
            }
            console.log(total_likes);
            return total_likes;
        }

        function totalDisLikes(likes) {
            var total_dislikes = 0;
            if (likes == null) {
                return total_dislikes;
            }
            if (likes.length > 0) {
                for (var i = 0; i < likes.length; i++) {
                    if (likes[i].IsLiked == 2) {
                        total_dislikes = total_dislikes + 1;
                    }
                }
            }

            console.log(total_dislikes);
            return total_dislikes;
        }


        function helpful(likes) {
            var total_help = 0;
            if (likes == null) {
                return total_help;
            }
            if (likes.length > 0) {
                for (var i = 0; i < likes.length; i++) {
                    if (likes[i].IsHelpfull == 1) {
                        total_help = total_help + 1;
                    }
                }
            }
            console.log(total_help);
            return total_help;
        }


        function total_comment_reply_like(likes) {
            var total_likes = 0;

            if (likes == null) {
                return total_like = 0;
            }
            if (likes.length > 0) {
                for (var i = 0; i < likes.length; i++) {
                    if (likes[i].IsLiked == 1) {
                        total_likes = total_likes + 1;
                    }
                }
            }
            return total_likes;
        }

        function total_comment_reply_dislike(likes) {
            var total_dislikes = 0;

            if (likes == null) {
                return total_dislike = 0;
            }
            if (likes.length > 0) {
                for (var i = 0; i < likes.length; i++) {
                    if (likes[i].IsLiked == 2) {
                        total_dislikes = total_dislikes + 1;
                    }
                }
            }
            return total_dislikes;
        }

        function capitalizeFirstLetter(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }

        //////// Reactions Check and show

        function getPostReaction(postId) {
            likeId = "postLike" + String(postId.Id);
            dislikeId = "postDisLike" + String(postId.Id);
            helpfulId = "postHelpful" + String(postId.Id);
            userId = $("#userId").val();
            if (postId.Reactions != null) {
                for (var i = 0; i < postId.Reactions.length; i++) {
                    if (userId == postId.Reactions[i].ApplicationUserId) {
                        if (postId.Reactions[i].IsHelpfull == 1) {
                            document.getElementById(helpfulId).style.color = 'red';
                        }
                        if (postId.Reactions[i].IsLiked == 1) {
                            document.getElementById(likeId).style.color = 'red';
                        }
                        else if (postId.Reactions[i].IsLiked == 2) {
                            document.getElementById(dislikeId).style.color = 'red';
                        }
                    }
                }
            }
        }

        function getcomment_subcommentReaction(postId) {
            var userId = $("#userId").val();
            if (postId.PostComments != null) {
                for (var i = 0; i < postId.PostComments.length; i++) {
                    commentLikeId = "commentLike" + String(postId.PostComments[i].Id);
                    commentDisLikeId = "commentDisLike" + String(postId.PostComments[i].Id);
                    //comment reaction check
                    if (postId.PostComments[i].CommentReactions != null) {
                        console.log("comment reaction found and its length is ");
                        console.log(postId.PostComments[i].CommentReactions.length);
                        for (var j = 0; j < postId.PostComments[i].CommentReactions.length; j++) {
                            if (userId == postId.PostComments[i].CommentReactions[j].ApplicationUserId) {
                                if (postId.PostComments[i].CommentReactions[j].IsLiked == 1) {
                                    document.getElementById(commentLikeId).style.color = 'red';
                                }
                                else if (postId.PostComments[i].CommentReactions[j].IsLiked == 2) {
                                    document.getElementById(commentDisLikeId).style.color = 'red';
                                }
                            }
                        }

                    }
                    //subcomment reaction check
                    if (postId.PostComments[i].SubComments != null) {
                        for (var k = 0; k < postId.PostComments[i].SubComments.length; k++) {
                            replyLikeId = "replyLike" + String(postId.PostComments[i].SubComments[k].Id);
                            replyDisLikeId = "replyDisLike" + String(postId.PostComments[i].SubComments[k].Id);
                            if (postId.PostComments[i].SubComments[k].ReplyReactions != null) {
                                for (var l = 0; l < postId.PostComments[i].SubComments[k].ReplyReactions.length; l++) {
                                    if (userId == postId.PostComments[i].SubComments[k].ReplyReactions[l].ApplicationUserId) {
                                        if (postId.PostComments[i].SubComments[k].ReplyReactions[l].IsLiked == 1) {
                                            document.getElementById(replyLikeId).style.color = 'red';
                                        }
                                        else if (postId.PostComments[i].SubComments[k].ReplyReactions[l].IsLiked == 2) {
                                            document.getElementById(replyDisLikeId).style.color = 'red';
                                        }
                                    }
                                }
                            }


                        }
                    }

                }
            }

        }

        /////////////////Post reactions

        function createPostReaction(postId, userId, like, helpful) {
            commentReactionUrl = "/api/Review/CreateReaction/";
            //commentReactionUrl = "http://reviewbhai.somee.com/api/Review/CreateReaction/";
            postId = postId
            userId = userId
            like = like
            helpful = helpful

            var reaction = {
                PostId: postId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }
            $.ajax({
                url: commentReactionUrl,
                type: "POST",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(reaction),
                dataType: "Json",
                success: function (data) {
                    getPostTotalReaction(postId);
                }
            });

        }

        function deletePostReaction(postId, reactionId) {
            postReactionUrl = "/api/Review/DeleteReaction/" + String(reactionId);
            // postReactionUrl = "http://reviewbhai.somee.com/api/Review/DeleteReaction/" + String(reactionId);
            $.ajax({
                url: postReactionUrl,
                type: "DELETE",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {
                    getPostTotalReaction(postId);
                }
            });
        }



        function updatePostReaction(postId, userId, like, helpful, reactionId) {
            commentReactionUrl = "/api/Review/UpdateReaction/" + String(reactionId);
            //commentReactionUrl = "http://reviewbhai.somee.com/api/Review/UpdateReaction/" + String(reactionId);
            postId = postId
            userId = userId
            like = like
            helpful = helpful

            var postReaction = {
                PostId: postId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }
            $.ajax({
                url: commentReactionUrl,
                type: "PUT",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(postReaction),
                dataType: "Json",
                complete: function () {
                    getPostTotalReaction(postId);
                }
            });

        }







        function postReaction(x, postId) {
            //postId = postId;
            isLiked = "postLike" + String(postId);
            isDisLike = "postDisLike" + String(postId);
            isHelpful = "postHelpful" + String(postId);
            var userId = $("#userId").val();
            console.log("postid = " + postId);
            postReactionUrl = "/api/Review/GetReaction/" + String(postId);
            //postReactionUrl = "http://reviewbhai.somee.com/api/Review/GetReaction/" + String(postId);
            $.ajax({
                url: postReactionUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {
                    var userFound;
                    $.each(data, function (index, value) {
                        if (userId == value.ApplicationUserId) {
                            userFound = true;
                        }
                        else {
                            userFound = false;
                        }
                    });


                    if (userFound == true) {
                        $.each(data, function (index, value) {
                            if (userId == value.ApplicationUserId) {
                                if (x.id == isLiked) {
                                    console.log("isliked = " + value.IsLiked);
                                    console.log("reaction Id =" + value.Id);
                                    if (value.IsLiked == 1) {
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 0, 1, value.Id);
                                            console.log("Like button pressed and and removed the like, Helpfull = 1");
                                            document.getElementById(isLiked).style.color = "gray";

                                        }
                                        else{
                                            deletePostReaction(postId, value.Id);
                                            document.getElementById(isLiked).style.color = "gray";
                                            console.log("Like button pressed and and removed the like and helpful, Helpfull = 0/2");
                                        }
                                    }
                                    else if (value.IsLiked == 2) {
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 1, 1, value.Id);
                                            console.log("Like button pressed and and removed the dislike, Helpfull = 1");
                                            document.getElementById(isDisLike).style.color = "gray";
                                            document.getElementById(isLiked).style.color = "red";
                                        }
                                        else{
                                            updatePostReaction(postId, userId, 1, 0, value.Id);
                                            console.log("Like button pressed and and removed the dislike and helpful, Helpfull = 0/2");
                                            document.getElementById(isDisLike).style.color = "gray";
                                            document.getElementById(isLiked).style.color = "red";

                                        }
                                    }
                                    else {
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 1, 1, value.Id);
                                            console.log("Like button pressed and and added like, Helpfull = 1");
                                            document.getElementById(isDisLike).style.color = "gray";
                                            document.getElementById(isLiked).style.color = "red";
                                        }
                                    }
                                }
                                else if (x.id == isDisLike) {
                                    if (value.IsLiked == 1) {
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 2, 1, value.Id);
                                            console.log("DisLike button pressed and and removed the like added dislike, Helpfull = 1");
                                            document.getElementById(isLiked).style.color = "gray";
                                            document.getElementById(isDisLike).style.color = "red";
                                        }
                                        else{
                                            updatePostReaction(postId, userId, 2, 0, value.Id);
                                            console.log("DisLike button pressed and and removed the like added dislike, Helpfull = 0/2");
                                            document.getElementById(isLiked).style.color = "gray";
                                            document.getElementById(isDisLike).style.color = "red";
                                        }
                                    }
                                    else if (value.IsLiked == 2) {
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 0, 1, value.Id);
                                            console.log("DisLike button pressed and and removed the  dislike, Helpfull = 1");
                                            document.getElementById(isLiked).style.color = "gray";
                                            document.getElementById(isDisLike).style.color = "gray";
                                        }
                                        else if ((value.IsHelpfull = 1)) {
                                            deletePostReaction(postId, value.Id);
                                            document.getElementById(isDisLike).style.color = "gray";
                                            console.log("DisLike button pressed  and removed the dislike and helpful, Helpfull = 0/2");
                                        }
                                    }
                                    else{
                                        if (value.IsHelpfull == 1) {
                                            updatePostReaction(postId, userId, 2, 1, value.Id);
                                            console.log("disLike button pressed and and added dislike, Helpfull = 1");
                                            document.getElementById(isDisLike).style.color = "red";
                                            document.getElementById(isLiked).style.color = "gray";
                                        }
                                    }
                                }
                                else if (x.id == isHelpful) {
                                    if (value.IsHelpfull == 1) {
                                        if (value.IsLiked == 1) {
                                            updatePostReaction(postId, userId, 1, 0, value.Id);
                                            console.log("helpful button pressed and and removed the helpful, isliked = 1");
                                            document.getElementById(isHelpful).style.color = "gray";
                                        }
                                        else if (value.IsLiked == 2) {
                                            updatePostReaction(postId, userId, 2, 0, value.Id);
                                            console.log("helpful button pressed and and removed the helpful, isliked = 2");
                                            document.getElementById(isHelpful).style.color = "gray";
                                        }
                                        else {
                                            deletePostReaction(postId, value.Id);
                                            console.log("helpful button pressed and and removed the helpful, isliked = 0");
                                            document.getElementById(isHelpful).style.color = "gray";
                                        }
                                    }
                                    else{
                                        if (value.IsLiked == 1) {
                                            updatePostReaction(postId, userId, 1, 1, value.Id);
                                            console.log("helpful button pressed and and added the helpful, isliked = 1");
                                            document.getElementById(isHelpful).style.color = "red";
                                        }
                                        else if (value.IsLiked == 2) {
                                            updatePostReaction(postId, userId, 2, 1, value.Id);
                                            console.log("helpful button pressed and and added the helpful, isliked = 2");
                                            document.getElementById(isHelpful).style.color = "red";
                                        }
                                    }
                                }
                            }

                        });
                    }
                    else{
                        if (x.id == isLiked) {
                            createPostReaction(postId, userId, 1, 0);
                            console.log("Like button pressed and and created like, ishelpfull = 0/2");
                            document.getElementById(isLiked).style.color = "red";
                        }
                        else if (x.id == isDisLike) {
                            createPostReaction(postId, userId, 2, 0);
                            console.log("DisLike button pressed and and created dislike, ishelpfull = 0/2");
                            document.getElementById(isDisLike).style.color = "red";
                        }
                        else if (x.id == isHelpful) {
                            createPostReaction(postId, userId, 0, 1);
                            console.log("helpful button pressed and and created helpful, islike = 0/2+");
                            document.getElementById(isHelpful).style.color = "red";
                        }
                    }
                },
            });

        }



        function getPostTotalReaction(postId) {
            var userId = $("#userId").val();
            postReactionsUrl = "/api/Review/GetReaction/" + String(postId);
            //postReactionsUrl = "http://reviewbhai.somee.com/api/Review/GetReaction/" + String(postId);
            $.ajax({
                url: postReactionsUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (value) {
                    var userFound;
                    var total_like = 0;
                    var total_dislike = 0;
                    var total_helps = 0;
                    if (value == null) {
                        ////////////////////////////////////// set document value
                        document.getElementById("totalLikes" + postId).innerHTML = total_like;
                        document.getElementById("totalDisLikes" + postId).innerHTML = total_dislike;
                        document.getElementById("totalHelpful" + postId).innerHTML = total_helps;
                    }
                    if (value.length > 0) {
                        for (var i = 0; i < value.length; i++) {
                            if (value[i].IsLiked == 1) {
                                total_like = total_like + 1;
                            }
                            if (value[i].IsLiked == 2) {
                                total_dislike = total_dislike + 1;
                            }
                            if (value[i].IsHelpfull == 1) {
                                total_helps = total_helps + 1;
                            }
                        }
                    }
                    console.log("total likes = " + total_like);
                    console.log("total dislike = " + total_dislike);
                    console.log("total helpful = " + total_helps);
                    document.getElementById("totalLikes" + postId).innerHTML = total_like;
                    document.getElementById("totalDisLikes" + postId).innerHTML = total_dislike;
                    document.getElementById("totalHelpful" + postId).innerHTML = total_helps;

                }
            });
        }






        function getCommentsTotalReaction(Id) {
            var userId = $("#userId").val();
            getCommentsTotalReactionUrl = "/api/Review/GetACommentReactions/" + String(Id);
            //getCommentsTotalReactionUrl = "http://reviewbhai.somee.com/api/Review/GetACommentReactions/" + String(Id);
            $.ajax({
                url: getCommentsTotalReactionUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (value) {
                    var userFound;
                    var total_comment_like = 0;
                    var total_comment_dislike = 0;

                    if (value == null) {
                        ////////////////////////////////////// set document value
                        document.getElementById("totalCommentLikes" + Id).innerHTML = total_comment_like;
                        document.getElementById("totalCommentDisLikes" + Id).innerHTML = total_comment_dislike;
                    }
                    if (value.length > 0) {
                        for (var i = 0; i < value.length; i++) {
                            if (value[i].IsLiked == 1) {
                                total_comment_like = total_comment_like + 1;
                            }
                            if (value[i].IsLiked == 2) {
                                total_comment_dislike = total_comment_dislike + 1;
                            }
                        }
                    }
                    console.log("total likes = " + total_comment_like);
                    console.log("total dislike = " + total_comment_dislike);

                    document.getElementById("totalCommentLikes" + Id).innerHTML = total_comment_like;
                    document.getElementById("totalCommentDisLikes" + Id).innerHTML = total_comment_dislike;


                }
            });
        }



        function getRepliesTotalReaction(Id) {
            var userId = $("#userId").val();
            getRepliesTotalReactionUrl = "/api/Review/GetAReplyReactions/" + String(Id);
            //getRepliesTotalReactionUrl = "http://reviewbhai.somee.com/api/Review/GetAReplyReactions/" + String(Id);
            $.ajax({
                url: getRepliesTotalReactionUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (value) {
                    var userFound;
                    var total_reply_like = 0;
                    var total_reply_dislike = 0;

                    if (value == null) {
                        ////////////////////////////////////// set document value
                        document.getElementById("totalReplyLikes" + Id).innerHTML = total_reply_like;
                        document.getElementById("totalReplyDisLikes" + Id).innerHTML = total_reply_dislike;
                    }
                    if (value.length > 0) {
                        for (var i = 0; i < value.length; i++) {
                            if (value[i].IsLiked == 1) {
                                total_reply_like = total_reply_like + 1;
                            }
                            if (value[i].IsLiked == 2) {
                                total_reply_dislike = total_reply_dislike + 1;
                            }
                        }
                    }
                    console.log("total likes = " + total_reply_like);
                    console.log("total dislike = " + total_reply_dislike);

                    document.getElementById("totalReplyLikes" + Id).innerHTML = total_reply_like;
                    document.getElementById("totalReplyDisLikes" + Id).innerHTML = total_reply_dislike;


                }
            });
        }
        /////// Comment & reply reaction

        function deleteCommentReaction(reactionId, commentId) {
            commentReactionUrl = "/api/Review/DeleteACommentReaction/" + String(reactionId);
            //commentReactionUrl = "http://reviewbhai.somee.com/api/Review/DeleteACommentReaction/" + String(reactionId);
            $.ajax({
                url: commentReactionUrl,
                type: "DELETE",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {
                    getCommentsTotalReaction(commentId);

                }
            });
        }



        function deleteReplyReaction(replyId, commentId) {
            replyReactionUrl = "/api/Review/DeleteAReplyReaction/" + String(replyId);
            //replyReactionUrl = "http://reviewbhai.somee.com/api/Review/DeleteAReplyReaction/" + String(replyId);
            $.ajax({
                url: replyReactionUrl,
                type: "DELETE",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {
                    getRepliesTotalReaction(commentId);
                }
            });
        }




        function postCommentReaction(commentId, userId, like, helpful) {
            commentReactionUrl = "/api/Review/PostACommentReaction";
            // commentReactionUrl = "http://reviewbhai.somee.com/api/Review/PostACommentReaction";
            commentId = commentId
            userId = userId
            like = like
            helpful = helpful

            var commentReaction = {
                PostCommentId: commentId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }
            $.ajax({
                url: commentReactionUrl,
                type: "POST",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(commentReaction),
                dataType: "Json",
                success: function (data) {
                    getCommentsTotalReaction(commentId);
                }
            });

        }


        function postReplyReaction(commentId, userId, like, helpful) {
            replyReactionUrl = "/api/Review/PostAReplyReaction";
            //replyReactionUrl = "http://reviewbhai.somee.com/api/Review/PostAReplyReaction";
            commentId = commentId
            userId = userId
            like = like
            helpful = helpful
            console.log("this is reply id ====" + commentId);
            var commentReaction = {
                SubCommentId: commentId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }
            $.ajax({
                url: replyReactionUrl,
                type: "POST",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(commentReaction),
                dataType: "Json",
                success: function (data) {
                    getRepliesTotalReaction(commentId);
                }
            });

        }



        function updateCommentReaction(commentId, userId, like, helpful, reactionId) {
            commentReactionUrl = "/api/Review/UpdateACommentReaction/" + String(reactionId);
            //commentReactionUrl = "http://reviewbhai.somee.com/api/Review/UpdateACommentReaction/" + String(reactionId);
            commentId = commentId
            userId = userId
            like = like
            helpful = helpful

            var commentReaction = {
                PostCommentId: commentId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }

            $.ajax({
                url: commentReactionUrl,
                type: "PUT",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(commentReaction),
                dataType: "Json",
                complete: function (data) {
                    getCommentsTotalReaction(commentId);
                }
            });
        }


        function updateReplyReaction(commentId, userId, like, helpful, reactionId) {
            commentReactionUrl = "/api/Review/UpdateAReplyReaction/" + String(reactionId);
            //commentReactionUrl = "http://reviewbhai.somee.com/api/Review/UpdateAReplyReaction/" + String(reactionId);
            commentId = commentId
            userId = userId
            like = like
            helpful = helpful

            var commentReaction = {
                SubCommentId: commentId,
                ApplicationUserId: userId,
                IsLiked: like,
                IsHelpfull: helpful
            }

            $.ajax({
                url: commentReactionUrl,
                type: "PUT",
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                data: JSON.stringify(commentReaction),
                dataType: "Json",
                complete: function (data) {
                    getRepliesTotalReaction(commentId);
                }
            });
        }




        function commentsReaction(x, id) {
            var userId = $("#userId").val();
            console.log("this is the value of xxxxxxxxxxxxx");
            console.log(id);
            console.log("this is the value of xxxxxxxxxxxxx");
            commentLikeId = "commentLike" + String(id);
            commentDisLikeId = "commentDisLike" + String(id);
            commentReactionsenUrl = "/api/Review/GetACommentReactions/" + String(id);
            //commentReactionsenUrl = "http://reviewbhai.somee.com/api/Review/GetACommentReactions/" + String(id);

            $.ajax({
                url: commentReactionsenUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {

                    var isFound;
                    $.each(data, function (index, value) {
                        if (userId == value.ApplicationUserId) {
                            isFound = true;
                        }

                        else {
                            isFound = false;
                        }
                    });
                    if (isFound == true) {
                        $.each(data, function (index, value) {
                            console.log(value);
                            if (userId == value.ApplicationUserId) {
                                if (x.id == commentLikeId) {
                                    if (value.IsLiked == 1) {
                                        deleteCommentReaction(value.Id, value.PostCommentId);
                                        document.getElementById(commentLikeId).style.color = 'gray';
                                    }
                                    else if (value.IsLiked == 2) {
                                        updateCommentReaction(id, userId, 1, 0, value.Id)
                                        document.getElementById(commentDisLikeId).style.color = 'gray';
                                        document.getElementById(commentLikeId).style.color = 'red';
                                        //update comment Reaction
                                    }
                                }
                                else if (x.id == commentDisLikeId) {
                                    if (value.IsLiked == 2) {
                                        deleteCommentReaction(value.Id, value.PostCommentId);
                                        document.getElementById(commentDisLikeId).style.color = 'gray';
                                    }
                                    else if (value.IsLiked == 1) {
                                        updateCommentReaction(id, userId, 2, 0, value.Id)
                                        document.getElementById(commentLikeId).style.color = 'gray';
                                        document.getElementById(commentDisLikeId).style.color = 'red';
                                        //update comment Reaction
                                    }
                                }


                            }
                        });
                    }
                    else {
                        if (x.id == commentLikeId) {
                            postCommentReaction(id, userId, 1, 0);
                            document.getElementById(commentLikeId).style.color = 'red';
                        }
                        else if (x.id == commentDisLikeId) {
                            postCommentReaction(id, userId, 2, 0);
                            document.getElementById(commentDisLikeId).style.color = 'red';
                        }
                    }
                }
            });

        }




        function replyReaction(x, id) {
            var userId = $("#userId").val();
            console.log("this is the value of xxxxxxxxxxxxx");
            console.log(id);
            console.log("this is the value of xxxxxxxxxxxxx");
            replyLikeId = "replyLike" + String(id);
            replyDisLikeId = "replyDisLike" + String(id);
            replyReactionsenUrl = "/api/Review/GetAReplyReactions/" + String(id);
            //replyReactionsenUrl = "http://reviewbhai.somee.com/api/Review/GetAReplyReactions/" + String(id);

            $.ajax({
                url: replyReactionsenUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },
                success: function (data) {

                    var isFound;
                    $.each(data, function (index, value) {
                        if (userId == value.ApplicationUserId) {
                            isFound = true;
                        }

                        else {
                            isFound = false;
                        }
                    });
                    if (isFound == true) {
                        $.each(data, function (index, value) {
                            console.log(value);
                            if (userId == value.ApplicationUserId) {
                                if (x.id == replyLikeId) {
                                    if (value.IsLiked == 1) {
                                        deleteReplyReaction(value.Id, value.SubCommentId);
                                        document.getElementById(replyLikeId).style.color = 'gray';
                                    }
                                    else if (value.IsLiked == 2) {
                                        updateReplyReaction(id, userId, 1, 0, value.Id)
                                        document.getElementById(replyDisLikeId).style.color = 'gray';
                                        document.getElementById(replyLikeId).style.color = 'red';

                                    }
                                }
                                else if (x.id == replyDisLikeId) {
                                    if (value.IsLiked == 2) {
                                        deleteReplyReaction(value.Id, value.SubCommentId);
                                        document.getElementById(replyDisLikeId).style.color = 'gray';
                                    }
                                    else if (value.IsLiked == 1) {
                                        updateReplyReaction(id, userId, 2, 0, value.Id)
                                        document.getElementById(replyLikeId).style.color = 'gray';
                                        document.getElementById(replyDisLikeId).style.color = 'red';

                                    }
                                }


                            }
                        });
                    }
                    else {
                        if (x.id == replyLikeId) {
                            postReplyReaction(id, userId, 1, 0);
                            document.getElementById(replyLikeId).style.color = 'red';
                        }
                        else if (x.id == replyDisLikeId) {
                            postReplyReaction(id, userId, 2, 0);
                            document.getElementById(replyDisLikeId).style.color = 'red';
                        }
                    }
                }
            });

        }

        function deleteComment(x, id, postId, post) {
            var y = confirm("Delete this comment ?");
            commentDel = "commentDelete" + String(id);
            deleteUrl = "/api/Review/DeleteAComment/" + String(id);
            //deleteUrl = "http://reviewbhai.somee.com/api/Review/DeleteAComment/" + String(id);
            if (commentDel == x.id) {
                if (y) {
                    $.ajax({
                        url: deleteUrl,
                        type: "DELETE",
                        headers: {
                            'Authorization': 'Bearer '
                                + sessionStorage.getItem("accessToken")
                        },
                        success: function (data) {
                            alert("comment deleted");
                            getAllComments(postId, post);
                        }
                    });
                }
            }
        }


        function deleteReply(x, id, postId, post) {
            var y = confirm("Delete this comment ?");
            replyDel = "replyDelete" + String(id);
            deleteUrl = "/api/Review/DeleteAReplyInAComment/" + String(id);
            //deleteUrl = "http://reviewbhai.somee.com/api/Review/DeleteAReplyInAComment/" + String(id);
            console.log(postId);
            console.log("abovvvvvvvvvvvvvvvvvvvvveeeeeeeeeeeeeee");
            if (replyDel == x.id) {
                if (y) {
                    $.ajax({
                        url: deleteUrl,
                        type: "DELETE",
                        headers: {
                            'Authorization': 'Bearer '
                                + sessionStorage.getItem("accessToken")
                        },
                        success: function (data) {
                            alert("comment deleted");
                            getAllComments(postId, post);
                        }
                    });
                }
            }
        }


        function commentDelCheck(commentId, commentUserId, postId, post) {
            var userId = $("#userId").val();
            if (userId == commentUserId) {
                return `<i id="commentDelete${commentId}" onclick="deleteComment(this,${commentId},${postId},${JSON.stringify(post).split('"').join("&quot;")})" class="far fa-trash-alt" style="color:red;border-radius: 50px;  padding: 7px 15px 7px 15px;"></i>`
            }
            else {
                return ""
            }
        }
        function replyDelCheck(replyId, commentUserId, postId, post) {
            var userId = $("#userId").val();
            if (userId == commentUserId) {
                return `<i id="replyDelete${replyId}" onclick="deleteReply(this,${replyId},${postId},${JSON.stringify(post).split('"').join("&quot;")})" class="far fa-trash-alt" style="color:red;border-radius: 50px;  padding: 7px 15px 7px 15px;"></i>`
            }
            else {
                return ""
            }
        }
        //////////////////////Get post comment and reply
        function getAllComments(postId, post) {
            postId = postId;
            var userId = $("#userId").val();
            getAllCommentsUrl = "/api/Review/GetComment/" + String(postId);
            //getAllCommentsUrl = "http://reviewbhai.somee.com/api/Review/GetComment/" + String(postId);
            $.ajax({
                url: getAllCommentsUrl,
                type: "GET",
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },

                success: function (postcomment) {
                    var subcomment = []
                    var comments = []
                    console.log(postcomment);
                    if (postcomment == null) {
                        var comment = "";
                        return comment;
                    }
                    if (postcomment.length > 0) {
                        for (var i = 0; i < postcomment.length; i++) {
                            if (postcomment[i].SubComments.length <= 0) {

                                console.log(111111111111)
                                comments.push(`              <div class="col-md-12">
                                                                                                                                <div class="media"> <img class="mr-3 rounded-circle" alt="Bootstrap Media Preview" src="https://i.imgur.com/stD0Q19.jpg" />
                                                                                                                                    <div class="media-body">
                                                                                                                                        <div class="row">
                                                                                                                                            <div class="col-12 d-flex">
                                                                                                                                                <h6 style="background-color: #f0f1f2;border-radius: 50px;  padding: 7px 15px 7px 15px;"><a href="#">${capitalizeFirstLetter(postcomment[i].ApplicationUser.Name)}</a>&nbsp; <span style="font-weight: normal;">${postcomment[i].Text} </span></h6>    ${commentDelCheck(postcomment[i].Id, postcomment[i].ApplicationUser.Id, postId, postId, post)}
                                                                                                                                            </div>

                                                                                                                                        </div>
                                                                                                                                        <div>
                                                                                                                                          <i id="commentLike${postcomment[i].Id}" onclick="commentsReaction(this,${postcomment[i].Id})" class="fa fa-thumbs-up fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                           <span style="color:black;font-size: 0.8rem;" id="totalCommentLikes${postcomment[i].Id}">${total_comment_reply_like(postcomment[i].CommentReactions)}</span>

                                                                                                                                          <i id="commentDisLike${postcomment[i].Id}" onclick="commentsReaction(this,${postcomment[i].Id})" class="fa fa-thumbs-down fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                           <span style="color:gray;font-size: 0.8rem;" id="totalCommentDisLikes${postcomment[i].Id}">${total_comment_reply_dislike(postcomment[i].CommentReactions)}</span>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                </div>
                                                                                                                            <div class="cardbox-comments " style="width:90%;">
                                                                                                                                <span class="comment-avatar float-left">
                                                                                                                                    <a href=""><img class=" mr-3 rounded-circle" src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/6.jpg" alt="..."></a>
                                                                                                                                </span>
                                                                                                                             <div class="row" >
                                                                                                                                <div class="input-group">
                                                                                                                                  <textarea rows="1" style="height:38px;border-radius: 50px 0 0 50px !important;resize: none;overflow:hidden" class="form-control" id="replybox${postcomment[i].Id}" style="width:100%; " placeholder="Write a Reply" type="text" ></textarea>
                                                                                                                                  <span>  <button id="replyButton${postcomment[i].Id}" onclick="commentReply(${postcomment[i].Id},${postId},${JSON.stringify(post).split('"').join("&quot;")})" class="btn btn-outline-secondary" style="height:38px;border-radius: 0 50px 50px 0 !important;resize: none;border: 1px solid #d1d1d1;"><i class="far fa-paper-plane"></i></button></span>
                                                                                                                                <!--/. Search -->
                                                                                                                                </div>
                                                                                                                                </div>
                                                                                                                            </div>
                                                                                                                         </div>`)
                            }
                            else {
                                console.log(22222222222222)
                                for (var j = 0; j < postcomment[i].SubComments.length; j++) {
                                    subcomment.push(` <div class="media mt-2"> <a class="pr-3" href="#"><img class="rounded-circle" alt="Bootstrap Media Another Preview" src="https://i.imgur.com/xELPaag.jpg" /></a>
                                                                                                                                            <div class="media-body">
                                                                                                                                                <div class="row">
                                                                                                                                                    <div class="col-12 d-flex" >
                                                                                                                                                        <h6 style="background-color: #f0f1f2;border-radius: 50px;  padding: 7px 15px 7px 15px;"><a href="#">${ capitalizeFirstLetter(postcomment[i].SubComments[j].ApplicationUser.Name)}</a>&nbsp; <span style="font-weight: normal;">${postcomment[i].SubComments[j].Text}</span></h6>${replyDelCheck(postcomment[i].SubComments[j].Id, postcomment[i].SubComments[j].ApplicationUser.Id, postId, post)}
                                                                                                                                                    </div>
                                                                                                                                                </div>
                                                                                                                                        <div>
                                                                                                                                           <i id="replyLike${postcomment[i].SubComments[j].Id}" onclick="replyReaction(this,${postcomment[i].SubComments[j].Id})" class="fa fa-thumbs-up fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                            <span style="color:gray;font-size: 0.8rem;" id="totalReplyLikes${postcomment[i].SubComments[j].Id}">${total_comment_reply_like(postcomment[i].SubComments[j].ReplyReactions)}</span>
                                                                                                                                          <i id="replyDisLike${postcomment[i].SubComments[j].Id}" onclick="replyReaction(this,${postcomment[i].SubComments[j].Id})" class="fa fa-thumbs-down fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                           <span style="color:gray;font-size: 0.8rem;" id="totalReplyDisLikes${postcomment[i].SubComments[j].Id}">${total_comment_reply_dislike(postcomment[i].SubComments[j].ReplyReactions)}</span>
                                                                                                                                        </div>
                                                                                                                                            </div>

                                                                                                                                        </div>`);
                                }
                                var commentandsubcomment = subcomment.slice(0, -1).join('') + '  ' + subcomment.slice(-1);
                                var subcomment = [];
                                comments.push(`<div class="col-md-12">
                                                                                                                                <div class="media"> <img class="mr-3 rounded-circle" alt="Bootstrap Media Preview" src="https://i.imgur.com/stD0Q19.jpg" />
                                                                                                                                    <div class="media-body">
                                                                                                                                        <div class="row">
                                                                                                                                            <div class="col-12 d-flex">
                                                                                                                                                <h6 style="background-color: #f0f1f2;border-radius: 50px;  padding: 7px 15px 7px 15px;"><a href="#">${capitalizeFirstLetter(postcomment[i].ApplicationUser.Name)}</a> &nbsp; <span style="font-weight: normal;">${postcomment[i].Text}</span></h6>${commentDelCheck(postcomment[i].Id, postcomment[i].ApplicationUser.Id, postId, post)}
                                                                                                                                            </div>
                                                                                                                                        </div>
                                                                                                                                        <div>
                                                                                                                                           <i id="commentLike${postcomment[i].Id}" onclick="commentsReaction(this,${postcomment[i].Id})" class="fa fa-thumbs-up fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                            <span style="color:gray;font-size: 0.8rem;" id="totalCommentLikes${postcomment[i].Id}">${total_comment_reply_like(postcomment[i].CommentReactions)}</span>

                                                                                                                                          <i id="commentDisLike${postcomment[i].Id}" onclick="commentsReaction(this,${postcomment[i].Id})" class="fa fa-thumbs-down fa-sm" style="color:gray;font-size: 0.8rem;"></i>
                                                                                                                                           <span style="color:gray;font-size: 0.8rem;" id="totalCommentDisLikes${postcomment[i].Id}">${total_comment_reply_dislike(postcomment[i].CommentReactions)}</span>
                                                                                                                                        </div>
                                                                                                                                         ${commentandsubcomment}
                                                                                                                                    </div>

                                                                                                                                </div>
                                                                                                                            <div class="cardbox-comments " style="width:90%;">
                                                                                                                                <span class="comment-avatar float-left">
                                                                                                                                    <a href=""><img class=" mr-3 rounded-circle" src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/6.jpg" alt="..."></a>
                                                                                                                                </span>
                                                                                                                                <div class="row " >
                                                                                                                                <div class="input-group">
                                                                                                                                   <textarea rows="1" style="height:38px;border-radius: 50px 0 0 50px !important;resize: none;overflow:hidden" class="form-control" id="replybox${postcomment[i].Id}" style="width:100%; " placeholder="Write a Reply" type="text"></textarea>
                                                                                                                                   <span> <button id="replyButton${postcomment[i].Id}" onclick="commentReply(${postcomment[i].Id},${postId},${JSON.stringify(post).split('"').join("&quot;")})" class="btn btn-outline-secondary" style="height:38px;border-radius: 0 50px 50px 0 !important;resize: none;border: 1px solid #d1d1d1;"><i class="far fa-paper-plane"></i></button></span>
                                                                                                                                <!--/. Search -->
                                                                                                                               </div>
                                                                                                                                </div>
                                                                                                                            </div>
                                                                                                                         </div>`)
                            }
                        }
                        var comment = comments.slice(0, -1).join(' &nbsp; ') + ' &nbsp; ' + comments.slice(-1);
                    }
                    else {
                        var comment = "";
                    }

                    console.log(comment);
                    document.getElementById("commentSection" + postId).innerHTML = comment;
                    getcomment_subcommentReaction(post)
                },



            });

        }

        /////////////////comment and reply add



        function postComment(postId, post) {
            var userId = $("#userId").val();
            postId = postId;
            console.log(postId);
            commentText = $("#commentBox" + postId).val();
            console.log(commentText)
            var comment = {
                ApplicationUserId: String(userId),
                PostId: postId,
                Text: commentText,
            }
            console.log(comment);

            if (commentText.replace(/^\s+|\s+$/g, "").length != 0) {
                $.ajax({
                    //url: 'http://reviewbhai.somee.com/api/Review/PostAComment',
                    url: '/api/Review/PostAComment',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': 'Bearer '
                            + sessionStorage.getItem("accessToken")
                    },
                    data: JSON.stringify(comment),
                    dataType: "Json",
                    success: function (response) {
                        console.log(response);
                        $('#commentBox' + postId).val("");
                        getAllComments(postId, post);
                    }
                });
            }

        }

        function commentReply(commentId, postId, post) {
            userId = $("#userId").val();
            console.log(userId);

            commentId = commentId;
            console.log(commentId);



            commentText = $("#replybox" + commentId).val();
            console.log(commentText)

            var comment = {
                ApplicationUserId: String(userId),
                PostCommentId: commentId,
                Text: commentText,
            }
            console.log(comment);
            if (commentText.replace(/^\s+|\s+$/g, "").length != 0) {
                $.ajax({
                    // url: 'http://reviewbhai.somee.com/api/Review/PostAReplayAComment/',
                    url: '/api/Review/PostAReplayAComment/',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': 'Bearer '
                            + sessionStorage.getItem("accessToken")
                    },
                    data: JSON.stringify(comment),
                    dataType: "Json",
                    success: function (response) {
                        getAllComments(postId, post);
                    }
                });
            }

        }

        ////////////////////////Post Delete

        function deletePost(postId) {
            var x = confirm("Delete the post ?");
            var deleteUrl = "/api/Review/DeletePost/" + postId;
            //var deleteUrl = "http://reviewbhai.somee.com/api/Review/DeletePost/" + postId;
            if (x) {
                $.ajax({
                    url: deleteUrl,
                    type: "DELETE",
                    headers: {
                        'Authorization': 'Bearer '
                            + sessionStorage.getItem("accessToken")
                    },
                    success: function (response) {
                        alert("deleted");
                    }
                });
            }

        }

        function buttonUpdate(x, reviewId) {
            console.log("id of this buton = " + reviewId);

            if (x.id == "editPost") {
                document.getElementById("post_up_button").innerHTML = `<button style="margin-top: 15px;" id="updatePost" onclick="createReview(this,${reviewId})" class="btn btn-info">Update</button>`;
            }
            else {
                document.getElementById("post_up_button").innerHTML = `<button style="margin-top: 15px;" id="createPost" onclick="createReview(this)" class="btn btn-info">Post</button>`;
            }
        }


        /////////////////Review Update


        ///////////////////////// Review Edit Form

        function postEdit(reviewId, posterId) {
            userId = $("#userId").val();
            reviewUrl = "/api/Review/GetReviewPost/" + String(reviewId);
            //reviewUrl = "http://reviewbhai.somee.com/api/Review/GetReviewPost/" + String(id);

            //$(".choices__inner").remove();
            //$(".choices__inner").remove();

            if (userId == posterId) {

                $.ajax({
                    url: reviewUrl,
                    type: "GET",
                    headers: {
                        'Authorization': 'Bearer '
                            + sessionStorage.getItem("accessToken")
                    },
                    success: function (data) {
                        console.log("Review get by id =  ");
                        console.log(data);
                        $('#body').val(data.PostBody);
                        $('#title').val(data.PostTitle);
                        console.log("Food rating is " + data.Stars.Food);
                        var foodrating = "'" + String(data.Stars.Food) + "'";
                        var servicerating = "'" + String(data.Stars.Service) + "'";
                        var cleanrating = "'" + String(data.Stars.Cleanliness) + "'";
                        var envrating = "'" + String(data.Stars.Environment) + "'";
                        $("input[name=food][value=" + foodrating + "]").prop("checked", true);
                        $("input[name=service][value=" + servicerating + "]").prop("checked", true);
                        $("input[name=cleanliness][value=" + cleanrating + "]").prop("checked", true);
                        $("input[name=environment][value=" + envrating + "]").prop("checked", true);


                        $('#choices-restaurent').val(1);

                    }
                });
            }
        }




        function dropdown(reviewerId, reviewId) {
            userId = $("#userId").val();
            reviewerIdS = String(reviewerId);
            if (userId == reviewerId) {
                return `             <ul class="dropdown-menu dropdown-scale dropdown-menu-right" role="menu" style="position: absolute; transform: translate3d(-136px, 28px, 0px); top: 0px; left: 0px; will-change: transform;">
                                                        <li> <a class="dropdown-item" href="#">Hide post</a></li>
                                                        <li id="editPost"  onclick="buttonUpdate(this,${reviewId})"> <a class="dropdown-item" data-toggle="modal" data-target="#myModal1" href="#" onclick="postEdit(${reviewId},'${reviewerIdS}')">Edit</a></li>
                                                        <li><a class="dropdown-item" href="#" onclick="deletePost(${reviewId})" >Delete</a></li>
                                                        <li><a class="dropdown-item" href="#">Save</a></li>
                                                    </ul>`
            }
            else {
                return `             <ul class="dropdown-menu dropdown-scale dropdown-menu-right" role="menu" style="position: absolute; transform: translate3d(-136px, 28px, 0px); top: 0px; left: 0px; will-change: transform;">
                                                    <li> <a class="dropdown-item" href="#">Hide post</a></li>
                                                    <li><a class="dropdown-item" href="#">Save</a></li>
                                                    <li> <a class="dropdown-item" href="#">Report</a></li>
                                                    </ul>`
            }


        }


        function reviewTemplate(review) {
            return `
<section class="hero">
<div class="container-fluid">
                <div class="row">
                    <div class="col-lg-10 offset-lg-1"">
                        <div class="cardbox shadow-lg bg-white">
                            <div class="cardbox-heading">
                                <!-- START dropdown-->
                                <div class="dropdown float-right" id="dropdown${review.Id}">
                                    <button class="btn btn-flat " type="button" data-toggle="dropdown" aria-expanded="false">
                                        <em class="fa fa-ellipsis-h"></em>
                                    </button>

                                    ${dropdown(review.ApplicationUser.Id, review.Id)}

                                </div><!--/ dropdown -->
                                <div class="media m-0">
                                    <div class="d-flex mr-3">
                                        <a href="#"><img class="img-fluid rounded-circle" src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/2.jpg" alt="User"></a>
                                    </div>
                                    <div class="media-body">
                                        <p class="m-0">
                                            <a class="mr-2" href="#">${capitalizeFirstLetter(review.ApplicationUser.Name)}</a>reviewed
                                            <a href="#">${items(review.Items)}</a>
                                            at <a class="mr-2" href="#">   <strong>${review.RestaurantOrPlace.ApplicationUser.Name}</strong> </a>
                                        </p>
                                        <small><span><i class="icon ion-md-pin"></i> ${review.RestaurantOrPlace.Location}</span></small>
                                        <small><span><i class="icon ion-md-time"></i> ${review.TimePosted}</span></small>
                                    </div>
                                </div><!--/ media -->
                            </div><!--/ cardbox-heading -->
                            <div class="cardbox-item">
                                <img class="img-fluid" style="width:100%;" src="ImgUpload/20201009pizza.jpg" alt="Image">

                                <div class="card-block px-2 py-3">
                                    <h4><a class="article-title " href="#"><strong>${review.PostTitle}</strong></a> </h4>
                                    <div>
                                        <div style="padding-bottom: 15px;padding-top: 15px;">
                                            <div class="row">
                                                <div class="article-content offset-lg-2">food = ${review.Stars.Food} </div>
                                                <div class="article-content offset-lg-2">environment = ${review.Stars.Environment} </div>
                                            </div>
                                            <div class="row">
                                                <div class="article-content offset-lg-2">service = ${review.Stars.Service} </div>
                                                <div class="article-content offset-lg-2">cleanliness = ${review.Stars.Cleanliness} </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <p class="article-content">${review.PostBody}<a href="#"></a></p>
                                    </div>
                                    <div class="tags mb-3" id="tags">
                                        ${tags(review.Tags)}
                                    </div>
                                </div>
                            </div><!--/ cardbox-item -->
                            <div class="cardbox-base">
                            <div class="row">
                                <div class="column" style="float: left;width: 25%;padding: 5px;">
                                <ul>
                                    <li><a><i id="postLike${review.Id}" onclick="postReaction(this,${review.Id})" class="fa fa-thumbs-up"></i></a></li>

                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/5.jpg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/2.jpg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li ><a><span id="totalLikes${review.Id}" onclick="getPostTotalReaction(${review.Id})">${totalLikes(review.Reactions)}</span></a></li>
                                </ul>
                            </div>
                            <div class="column" style="float: left;width: 25%;padding: 5px;">
                                <ul>
                                    <li><a><i id="postDisLike${review.Id}" onclick="postReaction(this,${review.Id})" class="fa fa-thumbs-down"></i></a></li>
                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/3.jpeg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/2.jpg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li><a><span id="totalDisLikes${review.Id}" onclick="getPostTotalReaction(${review.Id})">${totalDisLikes(review.Reactions)}</span></a></li>
                                </ul>
                            </div>
                            <div class="column" style="float: left;width: 25%;padding: 5px;">
                                <ul>
                                    <li><a><i id="postHelpful${review.Id}" onclick="postReaction(this,${review.Id})" class="fas fa-heart"></i></a></li>
                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/3.jpeg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li><a href="#"><img src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/1.jpg" class="img-fluid rounded-circle" alt="User"></a></li>
                                    <li><a><span id="totalHelpful${review.Id}" onclick="getPostTotalReaction(${review.Id})">${helpful(review.Reactions)}</span></a></li>
                                </ul>
                            </div>
                            <div class="column" style="float: left;width: 25%;padding: 5px;">
                                <ul>
                                    <li><a><i class="fa fa-comments" data-toggle="collapse" data-target="#commentSection${review.Id}">Comments</i></a></li>
                                    <li><a><em class="mr-5"></em></a></li>
                                </ul>
                            </div>
                            </div>
                            </div><!--/ cardbox-base -->
                            <div class="cardbox-comments " style="width:90%;">
                                <span class="comment-avatar float-left">
                                    <a href=""><img class=" mr-3 rounded-circle" src="http://www.themashabrand.com/templates/bootsnipp/post/assets/img/users/6.jpg" alt="..."></a>
                                </span>
                                <div class="row" >
                                    <div class="input-group">
                                    <textarea style="height:38px;border-radius: 50px 0 0 50px !important;resize: none;overflow:hidden" class="form-control custom-control" id="commentBox${review.Id}" style="width:100%;" rows="1" placeholder="Write a comment" type="text" ></textarea>
                                    <span><button   id="commentButton" onclick="postComment(${review.Id},${JSON.stringify(review).split('"').join("&quot;")})" class="btn btn-outline-secondary" style="height:38px;border-radius: 0px 50px 50px 0px !important;resize: none;border: 1px solid #d1d1d1;"><i class="far fa-paper-plane"></i></button></span>
                                <!--/. Search -->
                                </div>
                                </div>
                            </div><!--/ cardbox-like -->


<!-----------------------------------------------/. comments and reply -->
                            <div class="container">
                                <div id="commentSection${review.Id}" class="Collapse collapse hide">
                                                                        ${getAllComments(review.Id, review)}
                                </div>

                            </div>
<!-----------------------------------------------/. comments and reply -->


                        </div><!--/ cardbox -->

                    </div><!--/ col-lg-6 -->
                </div><!--/ row -->
</div><!--/ container -->

</section>



`
        }
    </script>

    @*<div class="modal fade" id="myModal1">

        </div>*@



    @*<div class="well">
            <input id="btnLoadEmployees" class="btn btn-success"
                   type="button" value="Load Employees" />
        </div>*@


    <input type="hidden" id="userId" name="custId" value=@User.Identity.GetUserId()>



    <div id="content">
        <div id="left" style="padding-top:1%;">
            Profile summery will be shown here.
        </div>

        <div id="middle" style="padding-top:1%;">
            <div class="row col-lg-10 offset-lg-1" >
                <div class="input-group">
                    <input class="form-control" type="text" placeholder="Write a review . . . ." data-toggle="modal" onclick="buttonUpdate(this)" data-target="#myModal1">
                </div>
            </div>

            <div style="padding-top:20px" id="listitems">
            </div>
        </div>

        <div id="right" style="padding-top:1%;">
          
            <div class="container">

                    <div class="row" id="ads">
                        <!-- Category Card -->
                        <div class="col-md-6">
                            <div class="card rounded">
                                <div class="card-image">
                                    
                                    <span class="card-notify-year">50%</span>
                                    <img class="img-fluid" style="padding-bottom:5px;" src="https://i.ibb.co/1b6k0W4/steak.jpg" alt="Alternate Text" />
                                </div>
                                <div class="card-image-overlay m-auto">
                                    <span class="card-detail-badge">Beef</span>
                                    <span class="card-detail-badge">$28</span>
                                </div>
                                <div class="card-body text-center">
                                    <div>
                                        <h5>Steak House</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card rounded">
                                <div class="card-image">
                                    
                                    <span class="card-notify-year">30%</span>
                                    <img class="img-fluid" style="padding-bottom:5px;" src="https://i.ibb.co/HNsCGH7/burger.webp" alt="Alternate Text" />
                                </div>
                                <div class="card-image-overlay m-auto">
                                    <span class="card-detail-badge">Unlimited Coke</span>
                                    <span class="card-detail-badge">$10</span>
                                </div>
                                <div class="card-body text-center">
                                    <div>
                                        <h5>Burger King</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    



    
        <div class="modal fade" id="myModal1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="content-section" id="reviewForm">
                            @RenderPage("~/Views/ReviewGetPost/CreateReview.cshtml")
                            <div id="post_up_button">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    



    <div id="divError" class="alert alert-danger collapse">
        <a id="linkClose" href="#" class="close">&times;</a>
        <div id="divErrorText"></div>
    </div>





    <script type="text/javascript">

        $(document).ready(function () {

            var id = $('#userId').val();
            console.log(id);

            if (sessionStorage.getItem('accessToken') == null) {
                // window.location.href = "http://reviewbhai.somee.com/user/signin";
                window.location.href = "/user/signin";
            }


            $('#linkClose').click(function () {
                $('#divError').hide('fade');
            });

            $('#errorModal').on('hidden.bs.modal', function () {
                window.location.href = "Login.html";
            });

            //$('#btnLoadEmployees').click(function () {
            $.ajax({
                //url: 'http://reviewbhai.somee.com/api/Review/GetReviewPosts',
                url: '/api/Review/GetReviewPosts',
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer '
                        + sessionStorage.getItem("accessToken")
                },

                success: function (data) {
                    console.log(data[0].ApplicationUser.Name);
                    console.log(data[0].RestaurantOrPlace);

                    document.getElementById("listitems").innerHTML = `
                                                ${ data.map(reviewTemplate).join('')}
                                                   `
                    $.each(data, function (index, value) {
                        getPostReaction(value);
                        //getcomment_subcommentReaction(value);
                        console.log("value id from document read >");
                        console.log(value);
                    });

                },
                error: function (jQXHR) {
                    // If status code is 401, access token expired, so
                    // redirect the user to the login page
                    if (jQXHR.status == "401") {
                        $('#errorModal').modal('show');
                    }
                    else {
                        $('#divErrorText').text(jqXHR.responseText);
                        $('#divError').show('fade');
                    }
                },
                async: false


            });
        });


    </script>


</div>


